{"version":3,"file":"static/js/4110.01497865.chunk.js","mappings":"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","sources":["components/Typography.js","components/styled-components/Sidenav.js","components/navigation-components/DashboardHeader.js","components/styled-components/FlexBox.js","components/styled-components/TableRow.js","navigation/auth/customHooks/useAuth.js","navigation/auth/customHooks/useAdminAuth.js","navigation/auth/customHooks/useWindowSize.js","pages/OrderDetailsPage.js","redux/actions/orderActions.js"],"sourcesContent":["import clsx from \"clsx\";\r\nimport { styled } from \"@mui/system\";\r\nimport Box from \"@mui/system/Box\";\r\n\r\nconst StyledBox = styled(Box)(({ textTransformStyle, ellipsis }) => ({\r\n  textTransform: textTransformStyle || \"none\",\r\n  whiteSpace: ellipsis ? \"nowrap\" : \"normal\",\r\n  overflow: ellipsis ? \"hidden\" : \"\",\r\n  textOverflow: ellipsis ? \"ellipsis\" : \"\",\r\n}));\r\n\r\nexport const H1 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledBox\r\n      textTransformStyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || \"\"]: true,\r\n      })}\r\n      component=\"h1\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"30px\"\r\n      fontWeight=\"700\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H2 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledBox\r\n      textTransformStyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || \"\"]: true,\r\n      })}\r\n      component=\"h2\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"25px\"\r\n      fontWeight=\"700\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H3 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledBox\r\n      textTransformStyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || \"\"]: true,\r\n      })}\r\n      component=\"h3\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"20px\"\r\n      fontWeight=\"700\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H4 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledBox\r\n      textTransformStyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || \"\"]: true,\r\n      })}\r\n      component=\"h4\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"17px\"\r\n      fontWeight=\"600\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H5 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledBox\r\n      textTransformStyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || \"\"]: true,\r\n      })}\r\n      component=\"h5\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"16px\"\r\n      fontWeight=\"600\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H6 = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledBox\r\n      textTransformStyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || \"\"]: true,\r\n      })}\r\n      component=\"h6\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"14px\"\r\n      fontWeight=\"600\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Paragraph = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledBox\r\n      textTransformStyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || \"\"]: true,\r\n      })}\r\n      component=\"p\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"14px\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Span = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledBox\r\n      textTransformStyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || \"\"]: true,\r\n      })}\r\n      component=\"span\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Small = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledBox\r\n      textTransformStyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || \"\"]: true,\r\n      })}\r\n      component=\"small\"\r\n      fontSize=\"12px\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Tiny = ({\r\n  children,\r\n  className,\r\n  ellipsis,\r\n  textTransform,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledBox\r\n      textTransformStyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || \"\"]: true,\r\n      })}\r\n      component=\"small\"\r\n      fontSize=\"10px\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n","import { cloneElement, useEffect, useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Drawer } from \"@mui/material\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Wrapper = styled(\"div\")(() => ({\r\n  \"& .handle\": {\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nconst Sidenav = ({\r\n  position,\r\n  open,\r\n  width,\r\n  handle,\r\n  children,\r\n  toggleSidenav,\r\n}) => {\r\n  const [sidenavOpen, setSidenavOpen] = useState(open);\r\n\r\n  const handleToggleSidenav = () => {\r\n    setSidenavOpen(!sidenavOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSidenavOpen(open);\r\n  }, [open]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Drawer\r\n        open={sidenavOpen}\r\n        anchor={position}\r\n        onClose={toggleSidenav || handleToggleSidenav}\r\n        SlideProps={{ style: { width: width || 280 } }}\r\n      >\r\n        {children}\r\n      </Drawer>\r\n      {handle &&\r\n        cloneElement(handle, {\r\n          className: clsx(handle.props.className, \"handle\"),\r\n          onClick: toggleSidenav || handleToggleSidenav,\r\n        })}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidenav;\r\n","import Box from \"@mui/system/Box\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Menu from \"@mui/icons-material/Menu\";\r\nimport { useWindowSize } from \"navigation/auth/customHooks\";\r\nimport FlexBox from \"components/styled-components/FlexBox\";\r\nimport Sidenav from \"components/styled-components/Sidenav\";\r\nimport { H2 } from \"components/Typography\";\r\n\r\nconst StyledBox = styled(Box)(({ theme }) => ({\r\n  display: \"flex\",\r\n  width: \"100%\",\r\n  marginTop: theme.spacing(-2),\r\n  marginBottom: theme.spacing(3),\r\n  \"& .headerHold\": {\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    \"& .sidenav\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    flexDirection: \"column\",\r\n    \"& .headerHold\": {},\r\n  },\r\n}));\r\n\r\nconst DashboardHeader = ({ title, navigation, button, ...props }) => {\r\n  const width = useWindowSize();\r\n  const isTablet = width < 1025;\r\n  return (\r\n    <StyledBox>\r\n      <FlexBox mt={2} className=\"headerHold\">\r\n        <FlexBox alignItems=\"center\">\r\n          {props.icon && <props.icon color=\"error\" fontSize=\"large\" />}\r\n          <H2 ml={1.5} my=\"0px\" lineHeight=\"1\" whiteSpace=\"pre\">\r\n            {title}\r\n          </H2>\r\n        </FlexBox>\r\n        {/* isTablet Menu Icon */}\r\n        <Box className=\"sidenav\">\r\n          <Sidenav position=\"left\" handle={<Menu fontSize=\"small\" />}>\r\n            {navigation}\r\n          </Sidenav>\r\n        </Box>\r\n        {!isTablet && button}\r\n      </FlexBox>\r\n      {isTablet && !!button && <Box mt={2}>{button}</Box>}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport default DashboardHeader;\r\n","import Box from \"@mui/material/Box\";\r\n\r\nconst FlexBox = ({ children, ...props }) => (\r\n  <Box display=\"flex\" {...props}>\r\n    {children}\r\n  </Box>\r\n);\r\n\r\nexport default FlexBox;\r\n","import Card from \"@mui/material/Card\";\r\nimport styled from \"@mui/system/styled\";\r\n\r\nconst TableRow = styled(Card)({\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  alignItems: \"center\",\r\n  borderRadius: \"10px\",\r\n  cursor: \"pointer\",\r\n  \"& > *\": {\r\n    flex: \"1 1 0\",\r\n  },\r\n  \"& .pre\": {\r\n    whiteSpace: \"pre\",\r\n  },\r\n});\r\n\r\nexport default TableRow;\r\n","import { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { LOGIN } from \"navigation/CONSTANTS\";\r\n\r\nconst mapState = ({ user }) => ({\r\n  currentUser: user.currentUser,\r\n});\r\n\r\nconst useAuth = (props) => {\r\n  const { currentUser } = useSelector(mapState);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      navigate(LOGIN);\r\n    }\r\n  }, [navigate, currentUser]);\r\n\r\n  return currentUser;\r\n};\r\n\r\nexport default useAuth;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { HOME, LOGIN } from \"navigation/CONSTANTS\";\r\n\r\nconst mapState = ({ user }) => ({ currentUser: user.currentUser });\r\n\r\nconst useAdminAuth = (props) => {\r\n  const { currentUser } = useSelector(mapState);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!currentUser) {\r\n      navigate(LOGIN);\r\n    } else if (!currentUser.isAdmin) {\r\n      navigate(HOME);\r\n    }\r\n  }, [currentUser, navigate]);\r\n\r\n  return currentUser;\r\n};\r\n\r\nexport default useAdminAuth;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport debounce from \"lodash.debounce\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst useWindowSize = () => {\r\n  const [width, setWidth] = useState(0);\r\n\r\n  const windowListener = useCallback(\r\n    debounce(() => {\r\n      if (window) setWidth(window.innerWidth);\r\n    }, 250),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (window) {\r\n      setWidth(window.innerWidth);\r\n      window.addEventListener(\"resize\", windowListener);\r\n    }\r\n    return () => {\r\n      windowListener.cancel();\r\n      window && window.removeEventListener(\"resize\", windowListener);\r\n    };\r\n  }, []);\r\n\r\n  return width;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport DashboardHeader from \"components/navigation-components/DashboardHeader\";\r\nimport ShoppingBagIcon from \"@mui/icons-material/ShoppingBag\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport FlexBox from \"components/styled-components/FlexBox\";\r\nimport { useWindowSize } from \"navigation/auth/customHooks\";\r\nimport { useTheme } from \"@mui/material\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { getOrderDetails } from \"redux/actions/orderActions\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Box from \"@mui/system/Box\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport { H5, H6, Paragraph } from \"components/Typography\";\r\nimport TableRow from \"components/styled-components/TableRow\";\r\n\r\nconst mapState = ({ ordersData }) => ({\r\n  orderDetails: ordersData.orderDetails,\r\n});\r\n\r\nconst OrderDetailsPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { orderDetails } = useSelector(mapState);\r\n  const { id } = useParams();\r\n  const width = useWindowSize();\r\n  const theme = useTheme();\r\n  const breakpoint = theme.breakpoints.up(\"md\");\r\n  const {\r\n    _id,\r\n    createdAt,\r\n    deliveryDate,\r\n    orderTotal,\r\n    address,\r\n    orderItems,\r\n    status,\r\n    amountPaid,\r\n    paymentMode,\r\n  } = orderDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderDetails(id));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <DashboardHeader\r\n        title=\"Order Details\"\r\n        icon={ShoppingBagIcon}\r\n        button={\r\n          <FlexBox justifyContent={width < breakpoint ? \"center\" : \"flex-end\"}>\r\n            {orderDetails && _id ? (\r\n              <Stack direction=\"row\" spacing={4}>\r\n                <Typography\r\n                  p=\"0.5rem 1rem\"\r\n                  borderRadius=\"300px\"\r\n                  bgcolor=\"primary.light\"\r\n                  color=\"primary.main\"\r\n                  textAlign=\"center\"\r\n                >\r\n                  Estimated Delivery Date :{\" \"}\r\n                  <b>{createdAt && new Date(createdAt).toDateString()}</b>\r\n                </Typography>\r\n                <Button\r\n                  color=\"primary\"\r\n                  sx={{ bgcolor: \"error.light\", px: \"2rem\" }}\r\n                >\r\n                  Order Again\r\n                </Button>\r\n              </Stack>\r\n            ) : (\r\n              <Typography\r\n                p=\"0.5rem 1rem\"\r\n                borderRadius=\"300px\"\r\n                bgcolor=\"error.light\"\r\n                color=\"error.main\"\r\n                textAlign=\"center\"\r\n              >\r\n                {`No details found for order #${id} .`}\r\n              </Typography>\r\n            )}\r\n          </FlexBox>\r\n        }\r\n      />\r\n      {/* Stepper code to be placed in between the StyledFlexBox */}\r\n      {/* <Card sx={{ p: \"2rem 1.5rem\", mb: \"20px\" }}>\r\n        <StyledFlexBox></StyledFlexBox>\r\n      </Card> */}\r\n      {orderDetails && _id && (\r\n        <Fragment>\r\n          <Card sx={{ p: \"0px\", mb: \"30px\" }}>\r\n            <TableRow\r\n              sx={{\r\n                bgcolor: \"grey.200\",\r\n                p: \"12px\",\r\n                boxShadow: \"none\",\r\n                borderRadius: 0,\r\n              }}\r\n            >\r\n              <FlexBox className=\"pre\" m={0.75} alignItems=\"center\">\r\n                <Typography fontSize=\"14px\" color=\"grey.600\" mr={0.5}>\r\n                  Order ID:\r\n                </Typography>\r\n                <Typography fontSize=\"14px\">{_id}</Typography>\r\n              </FlexBox>\r\n              <FlexBox className=\"pre\" m={0.75} alignItems=\"center\">\r\n                <Typography fontSize=\"14px\" color=\"grey.600\" mr={0.5}>\r\n                  Placed on:\r\n                </Typography>\r\n                <Typography fontSize=\"14px\">\r\n                  {createdAt && new Date(createdAt).toDateString()}\r\n                </Typography>\r\n              </FlexBox>\r\n              <FlexBox className=\"pre\" m={0.75} alignItems=\"center\">\r\n                <Typography fontSize=\"14px\" color=\"grey.600\" mr={0.5}>\r\n                  Delivered on:\r\n                </Typography>\r\n                <Typography fontSize=\"14px\">\r\n                  {\" \"}\r\n                  {status === \"Delivered\"\r\n                    ? new Date(deliveryDate).toDateString()\r\n                    : \"Not Delivered\"}\r\n                </Typography>\r\n              </FlexBox>\r\n            </TableRow>\r\n            {/* Ordered Products Listing */}\r\n            {orderItems &&\r\n              orderItems.map((item) => (\r\n                <FlexBox\r\n                  px={2}\r\n                  py={1}\r\n                  flexWrap=\"wrap\"\r\n                  alignItems=\"center\"\r\n                  key={item._id}\r\n                >\r\n                  <FlexBox flex=\"2 2 260px\" m={0.75} alignItems=\"center\">\r\n                    <Avatar\r\n                      src={item.imageUrl}\r\n                      sx={{ height: 64, width: 64 }}\r\n                    />\r\n                    <Box ml={2.5}>\r\n                      <H6 my=\"0px\">{item.productName}</H6>\r\n                      <Typography fontSize=\"14px\" color=\"grey.600\">\r\n                        <NumberFormat\r\n                          value={item.retailPrice}\r\n                          displayType=\"text\"\r\n                          thousandSeparator={true}\r\n                          prefix={\"Ksh. \"}\r\n                        />{\" \"}\r\n                        x {item.quantity}\r\n                      </Typography>\r\n                    </Box>\r\n                  </FlexBox>\r\n                  <FlexBox flex=\"1 1 260px\" m={0.75} alignItems=\"center\">\r\n                    {/* <Typography fontSize=\"14px\" color=\"grey.600\">\r\n              Product Brand\r\n            </Typography> */}\r\n                  </FlexBox>\r\n                  <FlexBox flex=\"160px\" m={0.75} alignItems=\"center\">\r\n                    <Button variant=\"text\" color=\"primary\">\r\n                      <Typography color=\"error\" fontSize=\"14px\">\r\n                        Write a Review\r\n                      </Typography>\r\n                    </Button>\r\n                  </FlexBox>\r\n                </FlexBox>\r\n              ))}\r\n          </Card>\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={6} md={6} xs={12}>\r\n              <Card sx={{ p: \"20px 30px\" }}>\r\n                <H5 mt={0} mb={2}>\r\n                  Delivery Address\r\n                </H5>\r\n                {address && (\r\n                  <Fragment>\r\n                    <Paragraph fontSize=\"14px\" my=\"0px\">\r\n                      {`${address.firstName} ${address.lastName}`}\r\n                    </Paragraph>\r\n                    <Paragraph fontSize=\"14px\" my=\"0px\">\r\n                      {address.phone}\r\n                    </Paragraph>\r\n                    <Paragraph fontSize=\"14px\" my=\"0px\">\r\n                      {`${address.town} - ${address.county}`}\r\n                    </Paragraph>\r\n                    <Paragraph\r\n                      fontSize=\"14px\"\r\n                      my=\"0px\"\r\n                      sx={{ whiteSpace: \"pre-line\" }}\r\n                    >\r\n                      {address.deliveryAddress}\r\n                    </Paragraph>\r\n                  </Fragment>\r\n                )}\r\n              </Card>\r\n            </Grid>\r\n            <Grid item lg={6} md={6} xs={12}>\r\n              <Card sx={{ p: \"15px 30px\" }}>\r\n                <H5 mt={0} mb={2}>\r\n                  Total Summary\r\n                </H5>\r\n                <FlexBox\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  mb={1}\r\n                >\r\n                  <Typography fontSize=\"14px\" color=\"grey.600\">\r\n                    Order Total:\r\n                  </Typography>\r\n                  <H6 my=\"0px\">\r\n                    <NumberFormat\r\n                      value={orderTotal}\r\n                      displayType=\"text\"\r\n                      thousandSeparator={true}\r\n                      prefix={\"Ksh. \"}\r\n                    />\r\n                  </H6>\r\n                </FlexBox>\r\n                <FlexBox\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  mb={1}\r\n                >\r\n                  <Typography fontSize=\"14px\" color=\"grey.600\">\r\n                    Amount Paid:\r\n                  </Typography>\r\n                  <H6 my=\"0px\">\r\n                    <NumberFormat\r\n                      value={amountPaid}\r\n                      displayType=\"text\"\r\n                      thousandSeparator={true}\r\n                      prefix={\"Ksh. \"}\r\n                    />\r\n                  </H6>\r\n                </FlexBox>\r\n                <Divider sx={{ mb: \"0.5rem\" }} />\r\n\r\n                <FlexBox\r\n                  justifyContent=\"space-between\"\r\n                  alignItems=\"center\"\r\n                  mb={2}\r\n                >\r\n                  <H6 my=\"0px\">Balance</H6>\r\n                  <H6 my=\"0px\">\r\n                    <NumberFormat\r\n                      value={orderTotal - amountPaid}\r\n                      displayType=\"text\"\r\n                      thousandSeparator={true}\r\n                      prefix={\"Ksh. \"}\r\n                    />\r\n                  </H6>\r\n                </FlexBox>\r\n                <Typography fontSize=\"14px\">\r\n                  Paid by{\" \"}\r\n                  {paymentMode &&\r\n                    paymentMode.toLowerCase().charAt(0).toUpperCase() +\r\n                      paymentMode.toLowerCase().slice(1)}\r\n                </Typography>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default OrderDetailsPage;\r\n","import * as actions from \"redux/CONSTANTS\";\r\nimport * as api from \"api\";\r\n\r\n// Create an Order\r\nexport const createOrder = (order) => async (dispatch) => {\r\n  dispatch({ type: actions.ORDER_CREATE_REQUEST, payload: order });\r\n  try {\r\n    const { data } = await api.createOrderAPI(order);\r\n    dispatch({ type: actions.ORDER_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: actions.ORDER_CREATE_ERROR, payload: error.message });\r\n  }\r\n};\r\n\r\n// Get All Orders\r\nexport const getUserOrders = (user) => async (dispatch) => {\r\n  dispatch({ type: actions.USER_ORDERS_REQUEST, payload: user });\r\n\r\n  try {\r\n    const { data } = await api.getUserOrdersAPI(user);\r\n    dispatch({ type: actions.USER_ORDERS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: actions.USER_ORDERS_ERROR, payload: error.message });\r\n  }\r\n};\r\n\r\n// Get An Order Details\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n  dispatch({ type: actions.ORDER_DETAILS_REQUEST, payload: id });\r\n\r\n  try {\r\n    const { data } = await api.getOrderDetailsAPI(id);\r\n    dispatch({ type: actions.ORDER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: actions.ORDER_DETAILS_ERROR, payload: error.message });\r\n  }\r\n};\r\n\r\n// Initiate Mpesa STK\r\nexport const initiateMpesa = (data) => async (dispatch) => {\r\n  dispatch({ type: actions.MPESA_STK_REQUEST, payload: data });\r\n};\r\n"],"names":["StyledBox","styled","Box","textTransformStyle","ellipsis","textTransform","whiteSpace","overflow","textOverflow","H1","children","className","props","clsx","component","mb","mt","fontSize","fontWeight","lineHeight","H2","H3","H4","H5","H6","Paragraph","Span","Small","Tiny","Wrapper","cursor","position","open","width","handle","toggleSidenav","useState","sidenavOpen","setSidenavOpen","handleToggleSidenav","useEffect","Drawer","anchor","onClose","SlideProps","style","cloneElement","onClick","theme","display","marginTop","spacing","marginBottom","justifyContent","alignItems","flexGrow","breakpoints","up","down","flexDirection","title","navigation","button","isTablet","useWindowSize","FlexBox","icon","color","ml","my","Menu","TableRow","Card","flexWrap","borderRadius","flex","mapState","currentUser","user","useSelector","navigate","useNavigate","LOGIN","isAdmin","HOME","setWidth","windowListener","useCallback","debounce","window","innerWidth","addEventListener","cancel","removeEventListener","orderDetails","ordersData","dispatch","useDispatch","id","useParams","breakpoint","useTheme","_id","createdAt","deliveryDate","orderTotal","address","orderItems","status","amountPaid","paymentMode","getOrderDetails","Fragment","ShoppingBagIcon","direction","p","bgcolor","textAlign","Date","toDateString","sx","px","boxShadow","m","mr","map","item","py","src","imageUrl","height","productName","value","retailPrice","displayType","thousandSeparator","prefix","quantity","variant","container","lg","md","xs","firstName","lastName","phone","town","county","deliveryAddress","toLowerCase","charAt","toUpperCase","slice","createOrder","order","type","actions","payload","api","data","message","getUserOrders","initiateMpesa"],"sourceRoot":""}